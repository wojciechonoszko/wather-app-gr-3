{"version":3,"sources":["js/getReferences.js","js/backgroundImage.js","js/currentPosition.js","js/getWeather.js","index.js"],"names":["getRefs","temperature","document","querySelector","locationTimezone","minTemperature","maxTemperature","body","searchForm","refs","randomIntegerFromInterval","min","max","Math","floor","random","setBackground","place","fetch","then","response","ok","Error","status","json","hits","randomIndexImg","length","style","largeImageURL","getPosition","lat","long","data","results","components","city","country","cityValue","degree","getWeatherByCity","markUpWeather","main","weather","name","textContent","round","temp","temp_max","temp_min","getWeather","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","addEventListener","evt","preventDefault","value","userInput","trim","console","log"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,MAAMA,EAAU,KACZ,CACLC,YAAaC,SAASC,cAAc,4BACpCC,iBAAkBF,SAASC,cAAc,yBACzCE,eAAgBH,SAASC,cAAc,iCACvCG,eAAgBJ,SAASC,cAAc,iCACvCI,KAAML,SAASC,cAAc,QAC7BK,WAAYN,SAASC,cAAc,gBAPlC,QAAA,QAAA;;ACoBJ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EApBH,IAAA,EAAA,QAAA,mBACA,MAAMM,GAAO,EAAb,EAAA,WAEMC,EAA4B,CAACC,EAAKC,IACzBC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGrD,SAASK,EAAcC,GAG1BC,kFAFuFD,0DAE5EE,KAAKC,IACR,IAACA,EAASC,GACJ,MAAA,IAAIC,MAAMF,EAASG,QAEtBH,OAAAA,EAASI,SACjBL,KAAK,IAAC,IAAA,KAAEM,GAAW,EACZC,MAAAA,EAAiBhB,EAA0B,EAAGe,EAAKE,OAAS,GAClElB,EAAKF,KAAKqB,oFACTH,EAAKC,GAAgBG;;ACL7B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAbD,IAAA,EAAA,QAAA,qBACO,SAASC,EAAYC,EAAKC,GAE7Bd,wDADsEa,KAAOC,0CAC1Db,KAAKC,IAChB,IAACA,EAASC,GACJ,MAAA,IAAIC,MAAMF,EAASG,QAEtBH,OAAAA,EAASI,SACjBL,KAAKc,IACEhB,MAAAA,EAAQgB,EAAKC,QAAQ,GAAGC,WAAWC,MAAQH,EAAKC,QAAQ,GAAGC,WAAWE,SAC9DpB,EAAAA,EAAAA,eAAAA;;ACqCtB,aA/CA,IAAA,EAAA,QAAA,mBACA,EAAA,QAAA,qBACA,EAAA,QAAA,qBAEA,MAAMR,GAAO,EAAb,EAAA,WACMD,EAAaN,SAASC,cAAc,cACpCmC,EAAY9B,EAAWL,cAAc,oBACrCoC,EAAS,IAWf,SAASC,EAAiBJ,GAExBlB,2DADiEkB,iEACtDjB,KAAKC,IACR,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,QAEpBH,OAAAA,EAASI,SACjBL,KAAKsB,GAGV,SAASA,EAAuC,GAAzB,IAAA,KAAEC,EAAF,QAAQC,EAAR,KAAiBC,GAAQ,EAC1CnC,EAAKR,YAAY4C,YAAchC,KAAKiC,MAAMJ,EAAKK,MAC/CtC,EAAKL,iBAAiByC,YAAcD,EACpCnC,EAAKH,eAAeuC,YAAehC,KAAKiC,MAAMJ,EAAKM,UAAYT,EAC/D9B,EAAKJ,eAAewC,YAAehC,KAAKiC,MAAMJ,EAAKO,UAAYV,EAGrE,SAASW,EAAWlB,EAAMD,GAExBb,6DADmEa,SAAWC,iEAE3Eb,KAAKC,IACA,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,QAEpBH,OAAAA,EAASI,SAEjBL,KAAKsB,GAnCNU,UAAUC,aACZD,UAAUC,YAAYC,mBAAmBC,IACjCtB,MAAAA,EAAOsB,EAASC,OAAOC,UACvBzB,EAAMuB,EAASC,OAAOE,SAC5BP,EAAWlB,EAAMD,IACLA,EAAAA,EAAAA,aAAAA,EAAKC,KAiCrBvB,EAAKD,WAAWkD,iBAAiB,SAAUC,IACzCA,EAAIC,iBACUpD,EAAWL,cAAc,sBAAsB0D,MAAvDA,MACAC,EAAYxB,EAAUuB,MAAME,OAChB,KAAdD,KAGUA,EAAAA,EAAAA,eAAAA,GACdtB,EAAiBsB,GACjBE,QAAQC,IAAIH;;ACvDd,aAAA,QAAA","file":"src.7ddc29ce.js","sourceRoot":"../src","sourcesContent":["export const getRefs = () => {\n    return {\n      temperature: document.querySelector('.currentDay__temperature'),\n      locationTimezone: document.querySelector('.currentDay__cityname'),\n      minTemperature: document.querySelector('.currentDay__temperature__min'),\n      maxTemperature: document.querySelector('.currentDay__temperature__max'),\n      body: document.querySelector('body'),\n      searchForm: document.querySelector('.formInput'),\n      // day: document.querySelector('.'),\n      // weekDay: document.querySelector('.'),\n      // month: document.querySelector('.'),\n      // time: document.querySelector('.'),\n\n    };\n  };","import { getRefs } from \"./getReferences\";\nconst refs = getRefs();\n\nconst randomIntegerFromInterval = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n      };\n\nexport function setBackground(place) {\n   const url = `https://pixabay.com/api/?image_type=backgrounds&orientation=horizontal&q=${place}&per_page=20&key=26975997-de7a8a152454f319936439968\n`;\n    fetch(url).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    }).then(({ hits }) => {\n        const randomIndexImg = randomIntegerFromInterval(0, hits.length - 1);\n        refs.body.style = `background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.9)),\n  url('${hits[randomIndexImg].largeImageURL}') center fixed; background-size: cover;`\n    });\n  }\n","import { setBackground } from \"./backgroundImage\";\nexport function getPosition(lat, long) {\n    const urlPosition = `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${long}&key=364a46f8eee34fc8925b76558072e056`\n    fetch(urlPosition).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    }).then(data => {\n        const place = data.results[0].components.city || data.results[0].components.country;\n        setBackground(place);\n    });\n\n};","import { getRefs } from './getReferences';\nimport { getPosition } from './currentPosition';\nimport { setBackground } from \"./backgroundImage\";\n\nconst refs = getRefs();\nconst searchForm = document.querySelector('.formInput');\nconst cityValue = searchForm.querySelector('.formInput input');\nconst degree = '\\u00B0';\n\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(position => {\n    const long = position.coords.longitude;\n    const lat = position.coords.latitude;\n    getWeather(long, lat);\n    getPosition(lat, long);\n  });\n}\n\nfunction getWeatherByCity(city) {\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=88007012f79caf118a2a9709acbfec32&units=metric&lang=en`\n  fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n  }).then(markUpWeather);\n};\n\nfunction markUpWeather({ main, weather, name }) {\n      refs.temperature.textContent = Math.round(main.temp);\n      refs.locationTimezone.textContent = name;\n      refs.maxTemperature.textContent =  Math.round(main.temp_max) + degree;\n      refs.minTemperature.textContent =  Math.round(main.temp_min) + degree;\n};\n\nfunction getWeather(long, lat) {\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=88007012f79caf118a2a9709acbfec32&units=metric&lang=en`;\n  fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(markUpWeather);\n};\n\nrefs.searchForm.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const value = searchForm.querySelector('input[name=\"city\"]').value;\n  const userInput = cityValue.value.trim();\n  if (userInput === \"\") {\n    return\n  }\n  setBackground(userInput);\n  getWeatherByCity(userInput)\n  console.log(userInput);\n});","//import './js/quotes.js';\nimport './js/getWeather.js';\n"]}