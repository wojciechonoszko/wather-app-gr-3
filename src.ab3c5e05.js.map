{"version":3,"sources":["js/getReferences.js","js/backgroundImage.js","js/currentPosition.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../node_modules/chart.js/auto/auto.esm.js","js/getWeather.js","index.js"],"names":["getRefs","temperature","document","querySelector","locationTimezone","minTemperature","maxTemperature","body","searchForm","refs","randomIntegerFromInterval","min","max","Math","floor","random","setBackground","place","fetch","then","response","ok","Error","status","json","hits","randomIndexImg","length","style","largeImageURL","getPosition","lat","long","data","results","components","city","country","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","noop","uid","id","isNullOrUndef","value","isArray","type","Object","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","undefined","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","fraction","niceFraction","_factorize","result","sqrt","push","sort","pop","isNumber","n","isNaN","x","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","A","B","C","D","E","F","c","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","ret","hexString","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","exec","rgbString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","Color","constructor","_rgb","_valid","valid","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","overrides","descriptors","getScope$1","node","split","set","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_lookup","table","cmp","hi","mid","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","forEach","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","items","Set","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Proxy","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","join","delete","createSubResolver","arr","filter","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","prevValue","subStart","startIsBefore","shouldStart","shouldStop","endIsBefore","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","_top","_bottom","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","startEnd","swap","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","BubbleController","getPixelForDecimal","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","controllers","__proto__","abstract","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestRadialItems","evaluationFunc","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","tickFont","nestedLabel","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","avNogSpacingRadius","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","prevX","lastY","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","lineLoop","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","hLimits","vLimits","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","cityValue","degree","getWeatherByCity","markUpWeather","main","weather","textContent","temp","temp_max","temp_min","getWeather","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","fiveDaysBtn","fiveDaysList","chartShowBtn","chartShowBtnCtn","chartCloseBtn","chartContainer","chartDisplay","classList","toggle","getWeatherFiveDays","log","list","humidity","pressure","speed","wind","dates","moreInfoBtn","createElement","className","createTextNode","appendChild","dateFiveDays","iconFiveDays","tempFiveDays","humFiveDays","listItem","renderFiveDaysList","markup","innerHTML","datesInSeconds","newdate","toLocaleString","setDate","getDate","dateInSeconds","getTime","toFixed","pointBorderColor","pointRadius","pointBorderWidth","pointBackgroundColor","pointHoverRadius","pointHoverBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","myLineChart","preventDefault","userInput","trim"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,MAAMA,EAAU,KACZ,CACLC,YAAaC,SAASC,cAAc,4BACpCC,iBAAkBF,SAASC,cAAc,yBACzCE,eAAgBH,SAASC,cAAc,iCACvCG,eAAgBJ,SAASC,cAAc,iCACvCI,KAAML,SAASC,cAAc,QAC7BK,WAAYN,SAASC,cAAc,gBAPlC,QAAA,QAAA;;ACoBJ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EApBH,IAAA,EAAA,QAAA,mBACA,MAAMM,GAAO,EAAb,EAAA,WAEMC,EAA4B,CAACC,EAAKC,IACzBC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGrD,SAASK,EAAcC,GAG1BC,kFAFuFD,0DAE5EE,KAAKC,IACR,IAACA,EAASC,GACJ,MAAA,IAAIC,MAAMF,EAASG,QAEtBH,OAAAA,EAASI,SACjBL,KAAK,IAAC,IAAA,KAAEM,GAAW,EACZC,MAAAA,EAAiBhB,EAA0B,EAAGe,EAAKE,OAAS,GAClElB,EAAKF,KAAKqB,oFACTH,EAAKC,GAAgBG;;ACL7B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAbD,IAAA,EAAA,QAAA,qBACO,SAASC,EAAYC,EAAKC,GAE7Bd,wDADsEa,KAAOC,0CAC1Db,KAAKC,IAChB,IAACA,EAASC,GACJ,MAAA,IAAIC,MAAMF,EAASG,QAEtBH,OAAAA,EAASI,SACjBL,KAAKc,IACEhB,MAAAA,EAAQgB,EAAKC,QAAQ,GAAGC,WAAWC,MAAQH,EAAKC,QAAQ,GAAGC,WAAWE,SAC9DpB,EAAAA,EAAAA,eAAAA;;AC07ErB,aA97ED,SAASqB,EAAWC,EAAWC,EAAWC,GACjCD,OAAAA,EAAY,IAAMD,EAAY,MAAQE,EA67E9C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,EAAA,QAAA,OAAA,EAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,EAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,OAAA,EAAA,QAAA,EAAA,EAAA,QAAA,OAAA,EAAA,QAAA,EAAA,GAAA,QAAA,OAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,OAAA,EAAA,QAAA,EAAA,GAAA,QAAA,EAAA,EAAA,QAAA,EAAA,GAAA,QAAA,OAAA,EAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,QAAA,QAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,QAAA,QAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,QAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,QAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA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","file":"src.ab3c5e05.js","sourceRoot":"../src","sourcesContent":["export const getRefs = () => {\n    return {\n      temperature: document.querySelector('.currentDay__temperature'),\n      locationTimezone: document.querySelector('.currentDay__cityname'),\n      minTemperature: document.querySelector('.currentDay__temperature__min'),\n      maxTemperature: document.querySelector('.currentDay__temperature__max'),\n      body: document.querySelector('body'),\n      searchForm: document.querySelector('.formInput'),\n      // day: document.querySelector('.'),\n      // weekDay: document.querySelector('.'),\n      // month: document.querySelector('.'),\n      // time: document.querySelector('.'),\n\n    };\n  };","import { getRefs } from \"./getReferences\";\nconst refs = getRefs();\n\nconst randomIntegerFromInterval = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n      };\n\nexport function setBackground(place) {\n   const url = `https://pixabay.com/api/?image_type=backgrounds&orientation=horizontal&q=${place}&per_page=20&key=26975997-de7a8a152454f319936439968\n`;\n    fetch(url).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    }).then(({ hits }) => {\n        const randomIndexImg = randomIntegerFromInterval(0, hits.length - 1);\n        refs.body.style = `background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.9)),\n  url('${hits[randomIndexImg].largeImageURL}') center fixed; background-size: cover;`\n    });\n  }\n","import { setBackground } from \"./backgroundImage\";\nexport function getPosition(lat, long) {\n    const urlPosition = `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${long}&key=364a46f8eee34fc8925b76558072e056`\n    fetch(urlPosition).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    }).then(data => {\n        const place = data.results[0].components.city || data.results[0].components.country;\n        setBackground(place);\n    });\n\n};","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import {Chart, registerables} from '../dist/chart.esm';\n\nChart.register(...registerables);\n\nexport default Chart;\n","import { getRefs } from './getReferences';\nimport { getPosition } from './currentPosition';\nimport { setBackground } from \"./backgroundImage\";\n\nconst refs = getRefs();\nconst searchForm = document.querySelector('.formInput');\nconst cityValue = searchForm.querySelector('.formInput input');\nconst degree = '\\u00B0';\n\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(position => {\n    const long = position.coords.longitude;\n    const lat = position.coords.latitude;\n    getWeather(long, lat);\n    getPosition(lat, long);\n  });\n}\n\nfunction getWeatherByCity(city) {\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=88007012f79caf118a2a9709acbfec32&units=metric&lang=en`\n  fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n  }).then(markUpWeather);\n};\n\nfunction markUpWeather({ main, weather, name }) {\n      refs.temperature.textContent = Math.round(main.temp);\n      refs.locationTimezone.textContent = name;\n      refs.maxTemperature.textContent =  Math.round(main.temp_max) + degree;\n      refs.minTemperature.textContent =  Math.round(main.temp_min) + degree;\n};\n\nfunction getWeather(long, lat) {\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=88007012f79caf118a2a9709acbfec32&units=metric&lang=en`;\n  fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(markUpWeather);\n};\n\n\n// =====================================================================\n// forecast 5 days\n\n// npm install chart.js --save - chart.js library installation\n\nimport Chart from 'chart.js/auto';\n\n//import { getRelativePosition } from 'chart.js/helpers';\n\n const ctx = document.getElementById('myChart');\n\nconst fiveDaysBtn = document.querySelector('.show-five-days-btn');\nconst fiveDaysList = document.querySelector('.five-days-list');\nconst chartShowBtn = document.querySelector('.chart-show-link');\nconst chartShowBtnCtn = document.querySelector('.chart-show-button-container');\nconst chartCloseBtn = document.querySelector('.chart-hide-link');\nconst chartContainer = document.querySelector('.chart-cnt');\n\n\n\nfunction chartDisplay() {\n  \n  chartShowBtn.classList.toggle('is-closed');\n  chartContainer.classList.toggle('is-closed');\n  \n}\n\nfiveDaysBtn.addEventListener(\"click\", getWeatherFiveDays)\n   \n\n chartShowBtn.addEventListener('click', chartDisplay);\n chartCloseBtn.addEventListener('click', chartDisplay);\n\n\nfunction getWeatherFiveDays(city) {\n  //const url = `https://api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=88007012f79caf118a2a9709acbfec32&units=metric&lang=en`\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&cnt=40&appid=192616cb441ff9a67bbb9f3f5782e997&units=metric&lang=en`\n  return fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      \n      return response.json();\n  }).then(response => {\n     console.log(response);\n    // console.log(response.list[0].main.temp);\n    // console.log(response.list[1].main.humidity);\n    // console.log(response.list[2].main.pressure);\n    // console.log(response.list[3].wind.speed);\n    \n   \n    const chartDataTemp = response.list.map((element) =>  temperature.push(element.main.temp) );\n    const chartDataHum = response.list.map((element) => humidity.push(element.main.humidity));\n    const chartDataPress = response.list.map((element) =>  pressure.push(element.main.pressure) );\n    const chartDataWind = response.list.map((element) => speed.push(element.wind.speed));\n\n   \n  }).then(data=> {\n    let i = 0;\n    \n    for (const date of dates){\n      let moreInfoBtn = document.createElement(`BUTTON`);\nmoreInfoBtn.className = 'more-info';\nlet text = document.createTextNode('more-info');\nmoreInfoBtn.appendChild(text);\n\nlet dateFiveDays = document.createElement('ul');\ndateFiveDays.className = 'date-five-days';\ndateFiveDays.textContent = date\n\nlet iconFiveDays = document.createElement('img');\niconFiveDays.className = 'icon-five-days';\n\nlet tempFiveDays = document.createElement('li');\ntempFiveDays.className = 'temp-five-days';\ntempFiveDays.textContent = `${temperature[i]} °C`\n\nlet humFiveDays = document.createElement('li');\nhumFiveDays.className = 'hum-five-days';\nhumFiveDays.textContent = `${humidity[i]} %`\n\n\n      let listItem = document.createElement('ul');\n      listItem.appendChild(dateFiveDays);\n      listItem.appendChild(tempFiveDays)\n      listItem.appendChild(iconFiveDays);\n      listItem.appendChild(humFiveDays)\n      listItem.appendChild(moreInfoBtn)\n     \n      i+=8; \n    console.log(i);\n      fiveDaysList.appendChild(listItem);\n      \n    }\n  })\n};\n//getWeatherFiveDays();\n\nconst temperature = [];\nconsole.log(temperature);\nconst humidity = [];\nconst pressure = [];\nconst speed = [];\n\nfunction renderFiveDaysList(elements) {\n  const markup = elements\n    .map((element) => {\n      return `<li>\n          <p><b>Name</b>: ${element.main.temp}</p>\n          <p><b>Email</b>: ${element.main.humidity}</p>\n          <p><b>Company</b>: ${element.main.pressure}</p>\n        </li>`;\n    })\n    .join(\"\");\n  fiveDaysList.innerHTML = markup;\n}\n\n\nconst date = new Date();\nconst dates = [];\nconst datesInSeconds = [];\nfor(let i=0; i <= 4; i++){\n\n// const month = date.getUTCMonth() + 1; //months from 1-12\n// const day = date.getUTCDate();\n// const year = date.getUTCFullYear();\nconst newdate = date.toLocaleString('en-us',{day: 'numeric', month:'short', year:'numeric'});\n//const newdate = year + \"/\" + month + \"/\" + day;\ndates.push(newdate);\ndate.setDate(date.getDate() + 1);\nlet dateInSeconds =(date.getTime()/1000).toFixed(0);\nconsole.log(dateInSeconds);\ndatesInSeconds.push(dateInSeconds);\n\n}\nconsole.log(dates);\nconsole.log(datesInSeconds);\n\n// ========================================================================\n// Chart\n\n\nlet data = {\n    //labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n    labels: dates,\n    datasets: [\n        {\n            label: \"Temperature, C°\",\n            \n            \n            \n            //linia\n            borderColor : 'rgba(255, 107, 9, 1)',\n            pointBorderColor : 'rgba(255, 107, 9, 1)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            backgroundColor : 'rgba(236,115,87,0.1)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(255, 107, 9, 1)',\n            //ustawienia punkut hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(255,255,255,1)',\n            pointHoverBorderColor: 'rgba(236,115,87,1)',\n            //data: [10,16,13,16,20],\n            data: temperature\n        },\n        {\n            label: \"Humidity, %\",\n            //linia\n            borderColor : 'rgba(9, 6, 235, 1)',\n            pointBorderColor : 'rgba(9, 6, 235, 1)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            //backgroundColor : 'rgba(236,115,87,0.1)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(9, 6, 235, 1)',\n            //ustawienia punktu hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(9, 6, 235, 1)',\n            pointHoverBorderColor: 'rgba(9, 6, 235, 1)',\n            data: humidity\n        },\n        {\n            label: \"Wind Speed, m/s\",\n            \n            borderColor : 'rgba(31, 211, 221, 0.8)',\n            pointBorderColor : 'rgba(31, 211, 221, 0.8)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            backgroundColor : 'rgba(31, 211, 221, 0.8)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(31, 211, 221, 0.8)',\n            //ustawienia punkut hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(31, 211, 221, 0.8)',\n            pointHoverBorderColor: 'rgba(31, 211, 221, 0.8)',\n            data: speed\n            \n        },\n        {\n          label: \" Atmosphere Pressure, mmHg\",\n          \n          borderColor : 'rgba(188, 25, 161, 0.8)',\n          pointBorderColor : 'rgba(188, 25, 161, 0.8)',\n          borderWidth : 2,\n          //kolor tla i legendy\n          fill: false, //czy wypelnic zbior\n          backgroundColor : 'rgba(188, 25, 161, 0.8)', //wplywa tez na kolor w legendzie\n          //ustawienia punktu\n          pointStyle : 'rectRot',\n          pointRadius : 4,\n          pointBorderWidth: 1,\n          pointBackgroundColor : 'rgba(188, 25, 161, 0.8)',\n          //ustawienia punkut hover\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 3,\n          pointHoverBackgroundColor: 'rgba(188, 25, 161, 0.8)',\n          pointHoverBorderColor: 'rgba(188, 25, 161, 0.8)',\n          data: pressure\n          \n      }\n    ]\n}\n\nlet options = {\n  maintainAspectRatio: false,\n  \n  responsive: true, //responsywnosc\n        hover: {\n            mode: 'dataset' //jak pokazywac tooltipy po najechaniu na punkty wykresu\n            //mode: 'label',\n        },\n    \n    \n    animations: {\n      \n        tension: {\n          duration: 1500,\n          easing: 'easeInCubic',\n          from: 5,\n          to: 0.15,\n          loop: false,\n          \n        }\n        \n        },\n    plugins: {\n      \n        title: {\n            display: false,\n            text: 'Chart Title EXAMPLE',\n            color: 'violet',\n            font: {\n              size: 30\n            }\n        },\n        \n        legend: {\n            position: 'top', //polozenie legendy\n            display: true, // pokazuj legende\n            labels: {\n              color: 'violet',\n              font: {\n                size: 14\n              },\n              usePointStyle: true,\n              pointStyle: 'rect'\n            },\n        }\n        \n    },\n    \n    \n    \n    \n    scales: {\n       \n        x: {\n            //type: 'linear',\n            display: true,\n            title: {\n              display: true,\n              text: 'Dates',\n              color: \"white\",\n              \n              font: {               \n                size: 20\n              }\n            },\n           \n            ticks: {\n              font: {\n                size: 17\n              },\n              color: 'white',\n            },\n            grid: {\n              color: 'white'\n            }\n          },\n    y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Values',\n          color: 'white',\n          font: {\n            size: 20\n          }\n        },\n        ticks: {\n          font: {\n            size: 17\n          },\n          color: 'violet',\n        },\n        grid: {\n          color: 'yellow'\n        }\n      },\n      \n    } \n\n};\n\nlet myLineChart = new Chart(ctx, {\n    type: 'line',\n    data: data,\n    options: options\n})\n\n\n// ==================================================================\n\nrefs.searchForm.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const value = searchForm.querySelector('input[name=\"city\"]').value;\n  const userInput = cityValue.value.trim();\n  if (userInput === \"\") {\n    return\n  }\n  setBackground(userInput);\n  getWeatherByCity(userInput);\n  getWeatherFiveDays(userInput);\n  console.log(userInput);\n});","//import './js/quotes.js';\nimport './js/getWeather.js';\n\n\n"]}