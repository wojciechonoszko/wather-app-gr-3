{"version":3,"sources":["js/getReferences.js","js/backgroundImage.js","js/currentPosition.js","js/getWeather.js","../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../node_modules/chart.js/auto/auto.esm.js","index.js"],"names":["getRefs","temperature","document","querySelector","locationTimezone","minTemperature","maxTemperature","body","searchForm","refs","randomIntegerFromInterval","min","max","Math","floor","random","setBackground","place","fetch","then","response","ok","Error","status","json","hits","randomIndexImg","length","style","largeImageURL","getPosition","lat","long","data","results","components","city","country","cityValue","degree","getWeatherByCity","markUpWeather","main","weather","name","textContent","round","temp","temp_max","temp_min","getWeather","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","addEventListener","evt","preventDefault","value","userInput","trim","console","log","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","noop","uid","id","isNullOrUndef","isArray","type","Object","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","undefined","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","almostEquals","niceRange","pow","fraction","niceFraction","_factorize","result","sqrt","push","sort","pop","isNumber","n","isNaN","x","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","A","B","C","D","E","F","c","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","ret","hexString","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","exec","rgbString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","Color","constructor","_rgb","_valid","valid","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","overrides","descriptors","getScope$1","node","split","set","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","toFontString","_measureText","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_lookup","table","cmp","hi","mid","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","forEach","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","items","Set","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Proxy","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","join","delete","createSubResolver","arr","filter","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","prevValue","subStart","startIsBefore","shouldStart","shouldStop","endIsBefore","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","_top","_bottom","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","startEnd","swap","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","BubbleController","getPixelForDecimal","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","controllers","__proto__","abstract","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestRadialItems","evaluationFunc","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","tickFont","nestedLabel","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","invalidatePlugins","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","avNogSpacingRadius","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","prevX","lastY","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","lineLoop","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","hLimits","vLimits","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","fiveDaysBtn","fiveDaysList","chartShowBtn","chartShowBtnCtn","chartCloseBtn","chartContainer","chartDisplay","classList","toggle","getWeatherFiveDays","list","humidity","pressure","speed","wind","dates","moreInfoBtn","createElement","className","createTextNode","appendChild","dateFiveDays","iconFiveDays","tempFiveDays","humFiveDays","listItem","renderFiveDaysList","markup","innerHTML","datesInSeconds","newdate","toLocaleString","setDate","getDate","dateInSeconds","getTime","toFixed","pointBorderColor","pointRadius","pointBorderWidth","pointBackgroundColor","pointHoverRadius","pointHoverBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","myLineChart"],"mappings":"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AA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,EAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,QAAA,QAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,QAAA,QAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,QAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,QAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,GAAA,GAAA,QAAA,QAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,GAAA,QAAA,EAAA,QAAA,OAAA,EAAA,QAAA,EAAA,EAAA,QAAA,OAAA,EAAA,QAAA,EAAA,GAAA,QAAA,EAAA,EAAA,QAAA,OAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,GAAA,QAAA,EAAA,QAAA,OA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","file":"src.c31e2de3.js","sourceRoot":"../src","sourcesContent":["export const getRefs = () => {\n    return {\n      temperature: document.querySelector('.currentDay__temperature'),\n      locationTimezone: document.querySelector('.currentDay__cityname'),\n      minTemperature: document.querySelector('.currentDay__temperature__min'),\n      maxTemperature: document.querySelector('.currentDay__temperature__max'),\n      body: document.querySelector('body'),\n      searchForm: document.querySelector('.formInput'),\n      // day: document.querySelector('.'),\n      // weekDay: document.querySelector('.'),\n      // month: document.querySelector('.'),\n      // time: document.querySelector('.'),\n\n    };\n  };","import { getRefs } from \"./getReferences\";\nconst refs = getRefs();\n\nconst randomIntegerFromInterval = (min, max) => {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n      };\n\nexport function setBackground(place) {\n   const url = `https://pixabay.com/api/?image_type=backgrounds&orientation=horizontal&q=${place}&per_page=20&key=26975997-de7a8a152454f319936439968\n`;\n    fetch(url).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    }).then(({ hits }) => {\n        const randomIndexImg = randomIntegerFromInterval(0, hits.length - 1);\n        refs.body.style = `background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.9)),\n  url('${hits[randomIndexImg].largeImageURL}') center fixed; background-size: cover;`\n    });\n  }\n","import { setBackground } from \"./backgroundImage\";\nexport function getPosition(lat, long) {\n    const urlPosition = `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${long}&key=364a46f8eee34fc8925b76558072e056`\n    fetch(urlPosition).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    }).then(data => {\n        const place = data.results[0].components.city || data.results[0].components.country;\n        setBackground(place);\n    });\n\n};","import { getRefs } from './getReferences';\nimport { getPosition } from './currentPosition';\nimport { setBackground } from \"./backgroundImage\";\n\nconst refs = getRefs();\nconst searchForm = document.querySelector('.formInput');\nconst cityValue = searchForm.querySelector('.formInput input');\nconst degree = '\\u00B0';\n\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(position => {\n    const long = position.coords.longitude;\n    const lat = position.coords.latitude;\n    getWeather(long, lat);\n    getPosition(lat, long);\n  });\n}\n\nfunction getWeatherByCity(city) {\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=88007012f79caf118a2a9709acbfec32&units=metric&lang=en`\n  fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n  }).then(markUpWeather);\n};\n\nfunction markUpWeather({ main, weather, name }) {\n      refs.temperature.textContent = Math.round(main.temp);\n      refs.locationTimezone.textContent = name;\n      refs.maxTemperature.textContent =  Math.round(main.temp_max) + degree;\n      refs.minTemperature.textContent =  Math.round(main.temp_min) + degree;\n};\n\nfunction getWeather(long, lat) {\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=88007012f79caf118a2a9709acbfec32&units=metric&lang=en`;\n  fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(markUpWeather);\n};\n\nrefs.searchForm.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const value = searchForm.querySelector('input[name=\"city\"]').value;\n  const userInput = cityValue.value.trim();\n  if (userInput === \"\") {\n    return\n  }\n  setBackground(userInput);\n  getWeatherByCity(userInput)\n  console.log(userInput);\n});","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import {Chart, registerables} from '../dist/chart.esm';\n\nChart.register(...registerables);\n\nexport default Chart;\n","//import './js/quotes.js';\nimport './js/getWeather.js';\n\n\n// npm install chart.js --save - chart.js library installation\n\nimport Chart from 'chart.js/auto';\n\n//import { getRelativePosition } from 'chart.js/helpers';\n\n const ctx = document.getElementById('myChart');\n\nconst fiveDaysBtn = document.querySelector('.show-five-days-btn');\nconst fiveDaysList = document.querySelector('.five-days-list');\nconst chartShowBtn = document.querySelector('.chart-show-link');\nconst chartShowBtnCtn = document.querySelector('.chart-show-button-container');\nconst chartCloseBtn = document.querySelector('.chart-hide-link');\nconst chartContainer = document.querySelector('.chart-cnt');\n\n\n\nfunction chartDisplay() {\n  \n  chartShowBtn.classList.toggle('is-closed');\n  chartContainer.classList.toggle('is-closed');\n  \n}\n\nfiveDaysBtn.addEventListener(\"click\", getWeatherFiveDays)\n   \n\n chartShowBtn.addEventListener('click', chartDisplay);\n chartCloseBtn.addEventListener('click', chartDisplay);\n\n\nfunction getWeatherFiveDays() {\n  //const url = `https://api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=88007012f79caf118a2a9709acbfec32&units=metric&lang=en`\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=London&cnt=40&appid=192616cb441ff9a67bbb9f3f5782e997&units=metric&lang=en`\n  return fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      \n      return response.json();\n  }).then(response => {\n     console.log(response);\n    // console.log(response.list[0].main.temp);\n    // console.log(response.list[1].main.humidity);\n    // console.log(response.list[2].main.pressure);\n    // console.log(response.list[3].wind.speed);\n    \n   \n    const chartDataTemp = response.list.map((element) =>  temperature.push(element.main.temp) );\n    const chartDataHum = response.list.map((element) => humidity.push(element.main.humidity));\n    const chartDataPress = response.list.map((element) =>  pressure.push(element.main.pressure) );\n    const chartDataWind = response.list.map((element) => speed.push(element.wind.speed));\n\n   \n  }).then(data=> {\n    let i = 0;\n    \n    for (const date of dates){\n      let moreInfoBtn = document.createElement(`BUTTON`);\nmoreInfoBtn.className = 'more-info';\nlet text = document.createTextNode('more-info');\nmoreInfoBtn.appendChild(text);\n\nlet dateFiveDays = document.createElement('ul');\ndateFiveDays.className = 'date-five-days';\ndateFiveDays.textContent = date\n\nlet iconFiveDays = document.createElement('img');\niconFiveDays.className = 'icon-five-days';\n\nlet tempFiveDays = document.createElement('li');\ntempFiveDays.className = 'temp-five-days';\ntempFiveDays.textContent = `${temperature[i]} °C`\n\nlet humFiveDays = document.createElement('li');\nhumFiveDays.className = 'hum-five-days';\nhumFiveDays.textContent = `${humidity[i]} %`\n\n\n      let listItem = document.createElement('ul');\n      listItem.appendChild(dateFiveDays);\n      listItem.appendChild(tempFiveDays)\n      listItem.appendChild(iconFiveDays);\n      listItem.appendChild(humFiveDays)\n      listItem.appendChild(moreInfoBtn)\n     \n      i+=8; \n    console.log(i);\n      fiveDaysList.appendChild(listItem);\n      \n    }\n  })\n};\n//getWeatherFiveDays();\n\nconst temperature = [];\nconsole.log(temperature);\nconst humidity = [];\nconst pressure = [];\nconst speed = [];\n\nfunction renderFiveDaysList(elements) {\n  const markup = elements\n    .map((element) => {\n      return `<li>\n          <p><b>Name</b>: ${element.main.temp}</p>\n          <p><b>Email</b>: ${element.main.humidity}</p>\n          <p><b>Company</b>: ${element.main.pressure}</p>\n        </li>`;\n    })\n    .join(\"\");\n  fiveDaysList.innerHTML = markup;\n}\n\n\nconst date = new Date();\nconst dates = [];\nconst datesInSeconds = [];\nfor(let i=0; i <= 4; i++){\n\n// const month = date.getUTCMonth() + 1; //months from 1-12\n// const day = date.getUTCDate();\n// const year = date.getUTCFullYear();\nconst newdate = date.toLocaleString('en-us',{day: 'numeric', month:'short', year:'numeric'});\n//const newdate = year + \"/\" + month + \"/\" + day;\ndates.push(newdate);\ndate.setDate(date.getDate() + 1);\nlet dateInSeconds =(date.getTime()/1000).toFixed(0);\nconsole.log(dateInSeconds);\ndatesInSeconds.push(dateInSeconds);\n\n}\nconsole.log(dates);\nconsole.log(datesInSeconds);\n\n\n\n\nlet data = {\n    //labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n    labels: dates,\n    datasets: [\n        {\n            label: \"Temperature, C°\",\n            \n            \n            \n            //linia\n            borderColor : 'rgba(255, 107, 9, 1)',\n            pointBorderColor : 'rgba(255, 107, 9, 1)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            backgroundColor : 'rgba(236,115,87,0.1)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(255, 107, 9, 1)',\n            //ustawienia punkut hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(255,255,255,1)',\n            pointHoverBorderColor: 'rgba(236,115,87,1)',\n            //data: [10,16,13,16,20],\n            data: temperature\n        },\n        {\n            label: \"Humidity, %\",\n            //linia\n            borderColor : 'rgba(9, 6, 235, 1)',\n            pointBorderColor : 'rgba(9, 6, 235, 1)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            //backgroundColor : 'rgba(236,115,87,0.1)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(9, 6, 235, 1)',\n            //ustawienia punktu hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(9, 6, 235, 1)',\n            pointHoverBorderColor: 'rgba(9, 6, 235, 1)',\n            data: humidity\n        },\n        {\n            label: \"Wind Speed, m/s\",\n            \n            borderColor : 'rgba(31, 211, 221, 0.8)',\n            pointBorderColor : 'rgba(31, 211, 221, 0.8)',\n            borderWidth : 2,\n            //kolor tla i legendy\n            fill: false, //czy wypelnic zbior\n            backgroundColor : 'rgba(31, 211, 221, 0.8)', //wplywa tez na kolor w legendzie\n            //ustawienia punktu\n            pointStyle : 'rectRot',\n            pointRadius : 4,\n            pointBorderWidth: 1,\n            pointBackgroundColor : 'rgba(31, 211, 221, 0.8)',\n            //ustawienia punkut hover\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 3,\n            pointHoverBackgroundColor: 'rgba(31, 211, 221, 0.8)',\n            pointHoverBorderColor: 'rgba(31, 211, 221, 0.8)',\n            data: speed\n            \n        },\n        {\n          label: \" Atmosphere Pressure, mmHg\",\n          \n          borderColor : 'rgba(188, 25, 161, 0.8)',\n          pointBorderColor : 'rgba(188, 25, 161, 0.8)',\n          borderWidth : 2,\n          //kolor tla i legendy\n          fill: false, //czy wypelnic zbior\n          backgroundColor : 'rgba(188, 25, 161, 0.8)', //wplywa tez na kolor w legendzie\n          //ustawienia punktu\n          pointStyle : 'rectRot',\n          pointRadius : 4,\n          pointBorderWidth: 1,\n          pointBackgroundColor : 'rgba(188, 25, 161, 0.8)',\n          //ustawienia punkut hover\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 3,\n          pointHoverBackgroundColor: 'rgba(188, 25, 161, 0.8)',\n          pointHoverBorderColor: 'rgba(188, 25, 161, 0.8)',\n          data: pressure\n          \n      }\n    ]\n}\n\nlet options = {\n  maintainAspectRatio: false,\n  \n  responsive: true, //responsywnosc\n        hover: {\n            mode: 'dataset' //jak pokazywac tooltipy po najechaniu na punkty wykresu\n            //mode: 'label',\n        },\n    \n    \n    animations: {\n      \n        tension: {\n          duration: 1500,\n          easing: 'easeInCubic',\n          from: 5,\n          to: 0.15,\n          loop: false,\n          \n        }\n        \n        },\n    plugins: {\n      \n        title: {\n            display: false,\n            text: 'Chart Title EXAMPLE',\n            color: 'violet',\n            font: {\n              size: 30\n            }\n        },\n        \n        legend: {\n            position: 'top', //polozenie legendy\n            display: true, // pokazuj legende\n            labels: {\n              color: 'violet',\n              font: {\n                size: 14\n              },\n              usePointStyle: true,\n              pointStyle: 'rect'\n            },\n        }\n        \n    },\n    \n    \n    \n    \n    scales: {\n       \n        x: {\n            //type: 'linear',\n            display: true,\n            title: {\n              display: true,\n              text: 'Dates',\n              color: \"white\",\n              \n              font: {               \n                size: 20\n              }\n            },\n           \n            ticks: {\n              font: {\n                size: 17\n              },\n              color: 'white',\n            },\n            grid: {\n              color: 'white'\n            }\n          },\n    y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Values',\n          color: 'white',\n          font: {\n            size: 20\n          }\n        },\n        ticks: {\n          font: {\n            size: 17\n          },\n          color: 'violet',\n        },\n        grid: {\n          color: 'yellow'\n        }\n      },\n      \n    } \n\n};\n\nlet myLineChart = new Chart(ctx, {\n    type: 'line',\n    data: data,\n    options: options\n})"]}